#!/bin/bash
dir=$( cd "$(dirname "${BASH_SOURCE[0]}")" ; pwd -P )
source "${dir}/config.sh"

ttx="\033[38;2;123;66;188m" # terrafrom purple 123 66 188
tl="${bold}${tbg}${ttx}"
echo -e "${tl}                                                                 ${z}"
echo -e "${tl}                           -- AWS CLI --                         ${z}"
echo -e "${tl}                                                                 ${z}"


echo -e "LOCALSTACK - Quicklink"
echo -e "  ${v}export ${n}AWS_ACCESS_KEY_ID=${t}test"
echo -e "  ${v}export ${n}AWS_SECRET_ACCESS_KEY=${t}test"
echo -e "  ${v}export ${n}AWS_DEFAULT_REGION=${t}us-west-1"
echo -e "  ${v}export ${n}AWS_PROFILE=${t}localstack"
echo -e "  ${v}aws ${n}--endpoint-url ${t}http://localhost:4566 ${v}<aws command> \n $z"


echo -e "Configure"
echo -e "  ${v}Create a profile                     ${f}aws configure $n--profile $t<profilename>                                                                         $z"
echo -e "  ${v}Output format                        ${f}aws configure output format {json, yaml, yaml-stream, text, table}                                                $z"
echo -e "  ${v}Specify AWS region                   ${f}aws configure region $t<region-name>                                                                              $z"
echo -e "  ${v}List available profiles              ${f}aws configure list-profiles                                                                                       $z"
echo -e "IAM"
echo -e "  ${v}List userId and UserName             ${f}aws iam list-users $d2| jq -r '.Users[]|.UserId+\" \"+.UserName'                                                  $z"
echo -e "  ${v}Get single user                      ${f}aws iam get-user $n--user-name $t<username>                                                                       $z"
echo -e "  ${v}List access keys for user            ${f}aws iam list-access-keys $n--user-name $t<username> $d2| jq -r .AccessKeyMetadata[].AccessKeyId                   $z"
echo -e "API Gateway"
echo -e "  ${v}List IDs and Names                   ${f}aws apigateway get-rest-apis $d2| jq -r '.items[] | .id+\" \"+.name'                                              $z"
echo -e "  ${v}List keys                            ${f}aws apigateway get-api-keys $d2| jq -r '.items[] | .id+\" \"+.name'                                               $z"
echo -e "  ${v}List domain names                    ${f}aws apigateway get-domain-names $d2| jq -r '.items[] | .domainName+\" \"+.regionalDomainName'                    $z"                    
echo -e "Lambda"
echo -e "  ${v}List functions, runtime, and memory  ${f}aws lambda list-functions $d2| jq -r '.Functions[] | .FunctionName+\" \"+.Runtime+\" \"+(.MemorySize|tostring)'   $z"
echo -e "  ${v}List source event for Lambda         ${f}aws lambda list-event-source-mappings $d2| jq -r '.EventSourceMappings[] | .FunctionArn+" "+.EventSourceArn'      $z"
echo -e "DynamoDB"
echo -e "  ${v}List tables                          ${f}aws dynamodb list-tables $d2| jq -r .TableNames []                                                                $z"
echo -e "  ${v}Get table information                ${f}aws dynamodb describe-table $n--table-name $t<table-name>                                                         $z"
echo -e "  ${v}Get all items from a table           ${f}aws dynamodb scan $n--table-name $t<table-name>                                                                   $z"
echo -e "  ${v}Get item count from a table          ${f}aws dynamodb scan $n--table-name $t<table-name> $n--select$t count $d2| jq .ScannedCount                              $z"
echo -e "S3"
echo -e "  ${v}List buckets                         ${f}aws s3 ls                                                                                                         $z"
echo -e "  ${v}List files in a bucket               ${f}aws s3 ls ${t}s3://mybucket                                                                                       $z"
echo -e "  ${v}Download S3 object to local          ${f}aws s3 cp ${t}s3://bucket-name                                                                                    $z"
echo -e "  ${v}Download bucket to local             ${f}aws s3 sync ${t}s3://bucket-name/ /media/pasport-ultra/backup                                                     $z"
echo -e "SNS"
echo -e "  ${v}List topics                          ${f}aws sns list-topics $d2| jq -r '.Topics[] | .TopicArn'                                                            $z"
echo -e "  ${v}List topic and related subs          ${f}aws sns list-subscriptions $d2| jq -r '.Subscriptions[] | .TopicArn+\" \"+.Protocol+\" \"+.Endpoint'              $z"
echo -e "SQS"
echo -e "  ${v}List queues                          ${f}aws sqs list-queues $d2| jq -r '.QueueUrls[]'                                                                     $z"
echo -e "  ${v}Pruge queue                          ${f}aws sqs purge-queue --queue-url <value>                                                                     $z"

echo -e "Links"
echo -e "  ${v}Configuring the AWS CLI:            $d2 https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-configure.html"
echo -e "  ${v}Documentation:                      $d2 https://awscli.amazonaws.com/v2/documentation/api/latest/reference/index.html"